services:

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
      - 15800:15672
#    expose:
#      - 5672
    networks: 
      - main-network
    environment:
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
      - ./secrets/rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro
      - ./secrets/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
    restart: always
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  postgres:
    image: postgres:15.2
    environment:
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_passwd
    ports:
      - "5432:5432"
    restart: always
    networks:
      - main-network
    volumes:
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./postgres/data:/var/lib/postgresql/data
#      - ./postgresql.conf:/var/lib/postgresql/data/postgresql.conf
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user_checker -d JobFinderApp" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    secrets:
      - postgres_user
      - postgres_passwd

  pgadmin:
    image: dpage/pgadmin4:6.21
    container_name: pgadmin_container
    environment:
      - PGADMIN_DEFAULT_EMAIL=dimau777@gmail.com
      - PGADMIN_DEFAULT_PASSWORD_FILE=/run/secrets/pgadmin_passwd
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    networks:
      - main-network
    secrets:
      - pgadmin_passwd

  hh-collector:
    image: hh-collector
    networks:
      - main-network
    environment:
      - RABBIT_MQ_SERVER_NAME=rabbitmq
      - RABBIT_MQ_PORT=5672
      - POSTGRES_SERVER_NAME=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=JobFinderApp
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    secrets:
      - hh_api_token
      - rabbitmq_user
      - rabbitmq_passwd
      - postgres_user
      - postgres_passwd

networks:
  main-network:

secrets:
  rabbitmq_user:
    file: ./secrets/rabbitmq_user.txt
  rabbitmq_passwd:
    file: ./secrets/rabbitmq_password.txt
  postgres_user:
    file: ./secrets/postgres_user.txt
  postgres_passwd:
    file: ./secrets/postgres_passwd.txt
  pgadmin_passwd:
    file: ./secrets/pgadmin_passwd.txt
  hh_api_token:
    file: ./secrets/hh_api_token.txt